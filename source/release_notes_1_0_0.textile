h2. Spree 1.0 Release Notes

endprologue.

h3. Summary

This is the official 1.0 Release of Spree. This is a *major* release for Spree, and so backwards compatibility with extensions and applications is not guaranteed. Please consult the "extension registry":http://spreecommerce.com/extensions to see which extensions are compatiable with this release. If your extension is not yet compatible you should check back periodically since the community will be upgrading various extensions over time.

WARNING: If you are upgrading from older versions of Spree you should perform a complete backup of your database before attempting. It is also recommended that you perform a test upgrade on a local development or staging server before attempting in your production environment.

h3. Namespacing

A difficulty in previous versions of Spree was using it with existing applications, as there may have been conflicting class names between the Spree engines and the host application. For example, if the host application had a +Product+ class, then this would cause Spree's +Product+ class to not load and issues would be encountered.

A major change within the 1.0 Release is the namespacing of all classes within Spree. This change remedies the above problem in the cleanest fashion possible.

Classes such as +Product+, +Variant+ and +ProductsController+ are now +Spree::Product+, +Spree::Variant+ and +Spree::ProductsController+. Other classes, such as +RedirectLegacyProductUrl+, have undergone one more level of namespacing to more clearly represent what areas of Spree they are from. This class is now called +Spree::Core::RedirectLegacyProductUrl+.

Constants such as +SpreeCore+ and +SpreeAuth+ are now +Spree::Core+ and +Spree::Auth+ respectively.

h4. Referencing Spree routes

In previous versions of Spree, due to the lack of namespacing, it was possible to reference routing helpers such as +product_url+ as-is in the controllers and views of your application and send them to the +ProductsController+ for Spree.

Due to the namespacing changes, these references must now be called on the +spree+ routing proxy, so that Rails will route to Spree's +product_url+, rather than a _potential_ +product_url+ within an application. Routing helpers referencing Spree parts must now be written like this:

<ruby>
spree.product_url
</ruby>

Conversely, to reference routes from the main application within a controller, view or template from Spree, you must use the +main_app+ routing proxy like this:

<ruby>
main_app.root_url
</ruby>

If you encounter errors where routing methods you think should be there are not available, ensure that you aren't trying to call a Spree route from the main application within the proxy prefix, or a main application route from Spree without the proxy as well.

h4. Mounting the Spree engine

When +rails g spree:install+ is run inside an application, it will install Spree, mounting the +Spree::Core::Engine+ component by inserting this line automatically into +config/routes.rb+:

<ruby>
mount Spree::Core::Engine, :at => "/"
</ruby>

By default, all Spree routes will be available at the root of your domain. For example, if your domain is http://shop.com, Spree's /products URL will be available at http://shop.com/products.

You can customize this simply by changing the +:at+ specification in +config/routes.rb+ to be something else. For example, if your domain is http://bobsite.com and you would like Spree to be mounted at /shop, you can write this:

<ruby>
mount Spree::Core::Engine, :at => "/shop"
</ruby>

The different parts of Spree (Auth, API, Dash & Promo) all extend the Core's routes, and so they will be mounted as well if they are available as gems.

h3. Preferences

We have refactored Spree Preferences to improve performance and simplify
code for applications and extensions. The previous interfaces have been
maintained so no code changes should be required. The underlying classes
have been completely rewritten.

Please see the "Spree blog":http://spreecommerce.com/blog/2011/12/08/spree-preferences-refactored for
notes on this release.

h3. Deprecated functions

h4. Middleware

The lines for middleware in +config/application.rb+ within a host application are now deprecated. When upgrading to Spree 1.0 you must remove these two lines from +config/application.rb+:

<ruby>
config.middleware.use "SeoAssist"
config.middleware.use "RedirectLegacyProductUrl"
</ruby>

These two pieces of middleware are now automatically included by the `Spree::Core::Engine`.


h4. Product

+master_price+, +master_price=+, +variants?+, +variant+ are now officially retired. Please use +Spree::Product.price+, +Spree::Product.price=+, +Spree::Product.has_variants?+ and +Spree::Product.master+ respectively instead.

h4. Spree::Config[:stylesheets]

+Spree::Config[:stylesheets]+ and +stylesheet_tags+ are removed in favor for the Rails 3.1 Asset Pipeline. See the "Asset Customization":asset_customization.html for more information.

Extensions looking to add stylesheets to the application should do so through the Asset Pipeline by making the extension an engine.

h4. General deprecations

* +Gateway.current+ is now deprecated. Use +order.payment_method.gateway+ now. "#747":https://github.com/spree/spree/pull/747

h3. Taxation

There have been several major changes to how Spree handles tax calculations. If you are migrating from an older version of Spree your previous tax configurations will not function properly and will need to be reconfigured before you can resume processing orders.

WARNING: Be sure to backup your database before migrating. Your tax configuration will likely break after upgrading.  You have been warned.

h4. Zone#match now only returns the best possible match.

Previously the method would return an array of zones as long as the zone included the address. Now only the narrowest match is returned.

h4. New @Order#tax_zone@ method

Will return the zone to be used for computing tax on the order. Returns the best possible zone match given the order address. In the absence of an order address it will return the default tax zone (if one is specified.)

h4. Adjustments are now polymorphic

Previously the @Adjustment@ class belonged to just @Order@. Now the @LineItem@ class can have adjustments as well.  This allows Spree to store the amount of tax included in the price when prices include tax (such as VAT case.)

h4. New @Order#price_adjustments@ method

Convenience method for listing all of the price adjustments in the order.  Price adjustments are tax calculations equivalent to the amount of tax included in a price. These adjustments are not counted against the order total but are sometimes useful for reporting purposes.

NOTE: You don't need to worry about price adjustments unless your prices include tax (such as the case with Value Added Tax.)

h4. New @Order#price_adjustment_totals@ method

Convenient method for show the price adjustment totals grouped by similar tax categories and rates.

h4. Removed helpers and javascript related to VAT

Prior to this version of Spree there were several helpers designed to show prices including tax before Spree was changed so that prices were expected to already include tax (when applicable.) We've removed a lot of stuff related to the old (more complicated) way of doing things.

WARNING: One unfortunate byproduct of prices now including tax is that you will need to change the prices on your products if you are in a region that requires prices to include tax and you were not already including the tax in your prices.

h4. Removed sales tax and VAT calculators

Both of these calculators have been replaced by the single calculator @Calculator::DefaultTax@.

h4. Tax rates can now be included in a product price

There is now a boolean checkbox for indiciating if a tax rate is included in the product price. The tax rate will only be considered as part of the product price if the product has a matching tax category. You can also have multiple tax rates with this designation.

h4. New @TaxRate#adjust@ method

This method is responsible for calculating the price. This is basically an internal change but some developers may be interested to know this.

INFO: Marking a tax rate as including price is the new way to handle Value Added Tax (VAT) and other similar tax schemes.

h3. Zones

There is one major change related to zones in this release. Zones can no longer have zone members that are themselves a zone. All zone members must now be a either a country or state.

h3. Testing

h4. The demise of Cucumber testing

Cucumber is a great testing tool however it doesn't bring more values for testing but overhead. It is decided to opt for a light-weight practice of RSpec + Capybara.

h3. Bug fixes

* Fixed issue caused by using +&:upcase+ syntax inside the +tab+ helper provided by +Admin::NavigationHelper+. "#693":https://github.com/spree/spree/pull/693 and "#704":https://github.com/spree/spree/pull/704.
* Fixed issue where non-ASCII characters were not being correctly titleized in the +tab+ helper provided by +Admin::NavigationHelper+. "#722":https://github.com/spree/spree/pull/722"
* When Thinking Sphinx was being used, a conflict would occur with its +Scopes+ module and the one inside Spree. "#740":https://github.com/spree/spree/pull/740
* Added +script/rails+ to core to allow things such as +rails generate+ and +rails console+ to be used. "commit b0903ea":https://github.com/spree/spree/commit/b0903ea477b63bd36c9940b5e0386e29e55f6189
* Performance improvements for the +best_selling_variants+ and +top_grossing_variants+ methods in +Admin::OverviewController+. "#718":https://github.com/spree/spree/pull/718
* If an admin user already exists, +rake db:admin:create+ will now ask if you want to override. "#752":https://github.com/spree/spree/pull/752
* Making a request to a URL such as +/admin/products/non-existant/edit+ no longer shows a status 500 page. "#538":https://github.com/spree/spree/issues/538
* +rails g spree:install+ output is now not so excessive. "commit ca4db30":https://github.com/spree/spree/commit/ca4db301e773da4ebc9d2a13e24c5d0e86dd0108
* The +Spree::Core::Engine+ is automatically mounted inside your application when you run +rails g spree:install+. "commit ba67b51":https://github.com/spree/spree/commit/ba67b514af41918bf892323c9fd685689c74667a
* Product +on_hand+ now takes all variants into account. "#772":https://github.com/spree/spree/issues/772
* The translation for "Listing Products" in admin/products now is more easily translatable into different languages. "commit c0d5cb5":https://github.com/spree/spree/commit/c0d5cb5316715ec8aa886fab5bc0820be616d302
* Removed POSIX-only system calls, replaced with Ruby calls instead to enable Windows compatibility. "#711":http://github.com/spree/spree/711 and "commit ce00172":https://github.com/spree/spree/commit/ce001721a32dd84523d9504feec074db72ef3efb"
* Improved +bundle exec rake test_app+ performance. "commit 6a2d367":https://github.com/spree/spree/commit/ce001721a32dd84523d9504feec074db72ef3efb
* Improved permalink code, removed reliance on the +rd-find_by_param+ gem. "#444":https://github.com/spree/issues/444 and "#847":https://github.com/spree/issues/847
* Master variant is now deleted when a product is deleted. Performance with this action has also been improved. "#801":https://github.com/spree/spree/issues/801
* An invalid coupon code on the payment screen will now show an error. "#717":https://github.com/spree/spree/issues/717
* Products are now restocked when an order is canceled, and unstocked when the order is resumed. "#729":https://github.com/spree/spree/issues/729
* The +ffaker+ gem is now used in favor of the +faker+ gem. "#826":https://github.com/spree/spree/issues/826
* +Spree::Config.set+ should no longer be used, please use +Spree.config+ with a block: "commit 5590fb3":https://github.com/spree/spree/commit/https://github.com/spree/spree/issues/801
* Fix calculator dropdown bug for creating a shipping method in the admin interface. "#825":https://github.com/spree/spree/issues/825
* Fix escaping of +order_subtotal+ in view. "#852":https:://github.com/spree/spree/issues/852
