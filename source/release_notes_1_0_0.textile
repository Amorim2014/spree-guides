h2. Spree 1.0 Release Notes

endprologue.

h3. Summary

This is the official 1.0 Release of Spree. This is a *major* release for Spree, and so backwards compatibility with extensions and applications is not maintained.

The changes to Spree in the 1.0 Release are outlined in this document.

h3. Namespacing

A difficulty in previous versions of Spree was using it with existing applications, as there may have been conflicting class names between the Spree engines and the host application. For example, if the host application had a +Product+ class, then this would cause Spree's +Product+ class to not load and issues would be encountered.

A major change within the 1.0 Release is the namespacing of all classes within Spree. This change remedies the above problem in the cleanest fashion possible.

Classes such as +Product+, +Variant+ and +ProductsController+ are now +Spree::Product+, +Spree::Variant+ and +Spree::ProductsController+. Other classes, such as +RedirectLegacyProductUrl+, have undergone one more level of namespacing to more clearly represent what areas of Spree they are from. This class is now called +Spree::Core::RedirectLegacyProductUrl+.

Constants such as +SpreeCore+ and +SpreeAuth+ are now +Spree::Core+ and +Spree::Auth+ respectively.

h4. Referencing Spree routes

In previous versions of Spree, due to the lack of namespacing, it was possible to reference routing helpers such as +product_url+ as-is in the controllers and views of your application and send them to the +ProductsController+ for Spree.

Due to the namespacing changes, these references must now be called on the +spree+ routing proxy, so that Rails will route to Spree's +product_url+, rather than a _potential_ +product_url+ within an application. Routing helpers referencing Spree parts must now be written like this:

<ruby>
spree.product_url
</ruby>

Conversely, to reference routes from the main application within a controller, view or template from Spree, you must use the +main_app+ routing proxy like this:

<ruby>
main_app.root_url
</ruby>

If you encounter errors where routing methods you think should be there are not available, ensure that you aren't trying to call a Spree route from the main application within the proxy prefix, or a main application route from Spree without the proxy as well.

h4. Mounting the Spree engine

When +rails g spree:install+ is run inside an application, it will install Spree, mounting the +Spree::Core::Engine+ component by inserting this line automatically into +config/routes.rb+:

<ruby>
mount Spree::Core::Engine, :at => "/"
</ruby>

By default, all Spree routes will be available at the root of your domain. For example, if your domain is http://shop.com, Spree's /products URL will be available at http://shop.com/products.

You can customize this simply by changing the +:at+ specification in +config/routes.rb+ to be something else. For example, if your domain is http://bobsite.com and you would like Spree to be mounted at /shop, you can write this:

<ruby>
mount Spree::Core::Engine, :at => "/shop"
</ruby>
  
h3. Preferences

We have refactored Spree Preferences to improve performance and simplify
code for applications and extensions. The previous interfaces have been
maintained so no code changes should be required. The underlying classes
have been completely rewritten.

Please see the "Spree blog":http://spreecommerce.com/blog/2011/12/04/spree-preferences-refactor for
notes on this release.

h3. Deprecated functions

h4. Middleware

The lines for middleware in +config/application.rb+ within a host application are now deprecated. When upgrading to Spree 1.0 you must remove these two lines from +config/application.rb+:

<ruby>
config.middleware.use "SeoAssist"
config.middleware.use "RedirectLegacyProductUrl"
</ruby>

These two pieces of middleware are now automatically included by the `Spree::Core::Engine`.


h4. Product

+master_price+, +master_price=+, +variants?+, +variant+ are now officially retired. Please use +Spree::Product.price+, +Spree::Product.price=+, +Spree::Product.has_variants?+ and +Spree::Product.master+ respectively instead.

h4. Spree::Config[:stylesheets]

+Spree::Config[:stylesheets]+ and +stylesheet_tags+ are removed in favor for the Rails 3.1 Asset Pipeline. See the "Asset Customization":asset_customization.html for more information.

Extensions looking to add stylesheets to the application should do so through the Asset Pipeline by making the extension an engine.

h4. General deprecations

* +Gateway.current+ is now deprecated. Use +order.payment_method.gateway+ now. "#747":https://github.com/spree/spree/pull/747

h3. Testing

h4. The demise of Cucumber testing

Cucumber is a great testing tool however it doesn't bring more values for testing but overhead. It is decided to opt for a light-weight practice of RSpec + Capybara.

h3. Bug fixes

* Fixed issue caused by using +&:upcase+ syntax inside the +tab+ helper provided by +Admin::NavigationHelper+. "#693":https://github.com/spree/spree/pull/693 and "#704":https://github.com/spree/spree/pull/704.
* Fixed issue where non-ASCII characters were not being correctly titleized in the +tab+ helper provided by +Admin::NavigationHelper+. "#722":https://github.com/spree/spree/pull/722"
* When Thinking Sphinx was being used, a conflict would occur with its +Scopes+ module and the one inside Spree. "#740":https://github.com/spree/spree/pull/740
* Added +script/rails+ to core to allow things such as +rails generate+ and +rails console+ to be used. "commit b0903ea":https://github.com/spree/spree/commit/b0903ea477b63bd36c9940b5e0386e29e55f6189
* Performance improvements for the +best_selling_variants+ and +top_grossing_variants+ methods in +Admin::OverviewController+. "#718":https://github.com/spree/spree/pull/718
* If an admin user already exists, +rake db:admin:create+ will now ask if you want to override. "#752":https://github.com/spree/spree/pull/752
* Making a request to a URL such as +/admin/products/non-existant/edit+ no longer shows a status 500 page. "#538":https://github.com/spree/spree/issues/538
* +rails g spree:install+ output is now not so excessive. "commit ca4db30":https://github.com/spree/spree/commit/ca4db301e773da4ebc9d2a13e24c5d0e86dd0108
* The +Spree::Core::Engine+ is automatically mounted inside your application when you run +rails g spree:install+. "commit ba67b51":https://github.com/spree/spree/commit/ba67b514af41918bf892323c9fd685689c74667a"
