h2. Spree 0.40.0 Release Notes

endprologue.

h3. Summary

h3. Database Migrations

There are several new database changes in the 0.40.0 release.  You will need to update your database migrations as follows:

<shell>
$ rake spree:install:migrations
$ rake db:migrate
</shell>

WARNING. Always be sure to perform a complete database backup before performing any operations.  It is also suggested that you examine the new migrations closely before running them so you are aware of what changes are being made to your database.

h3. Production Assets

h3. Replacing Authlogic with Devise

Spree has replaced the authlogic gem in favor of "Devise":http://github.com/plataformatec/devise for all authentication methods. In part an effort to both simplify customization strategies, due to devise's modular nature, and allow for much simpler creation of extensions needing different authentication schemas and scopes. We have made every effort to maintain the backward compatibility required to upgrade an existing site.  This means that naming conventions, and routing have all remained intact where possible as well as the use of deprecation notices.

The database changes, described below, are made to offer as much flexibility as Devise itself offers and enabling you to implement, adjust the behavior, or remove features fairly effortlessly for those familiar with Devise.

h4. Miscellaneous Clean Up

Some of the biggest changes to the Spree authentication process is consolidation of most all the user management functions into the +spree_auth+ gem.  Prior versions of Spree still had small bits of code floating around in +spree_core+ etc.  So some files have simply been moved to where they should have been all along.

h4. Upgrading Existing Sites

We have tried to minimize changes and when possible, naming conventions have be maintained.  The result is that only one controller has been moved and renamed. Routing and the named route conventions having been maintained as well.

NOTE. The file +core/password_resets_controller.rb+ has been renamed and moved to +auth/user_password_resets_controller.rb+

We have already set up devise to handle the existing encryption scheme that authlogic used so there is no need to make any changes and the current users will work "out of the box".

h3. Changes to the REST API

Spree 0.40.x introduces several minor but important changes to the REST API.  If you are currently relying on the API you should be aware of a few important changes.  Please also consult the detailed "REST Guide":/rest.html for more details.

h4. New Authentication Mechanism

The most significant change to the REST API is related to authentication.  The recent adoption of "Devise":http://github.com/plataformatec/devise for authentication in general has resulted in new opportunities to improve authentication for the API specifically.

Prior to Spree 0.40.x the old method of authentication was to pass an authentication token in the header.  This involved using the specially designated +X-SpreeAPIKey+ header and passing a corresponding token value.  The new approach is to use standard +HTTP_AUTHORIZATION+ which is already nicely implemented by Devise.

If you were using curl you could achieve this authentication as follows:

<shell>
curl -u V8WPYgRdSZN1mSQG17sK:x /
http://example.com/api/orders.json
</shell>

Note that we are using the token as the "user name" and passing "x" as a password here.  There is nothing special about "x", its just a placeholder since many HTTP Basic Authentication implementations require a password to be submitted.  In our case the token is sufficient so we use a placeholder for the password.

h4. Support for +.json+ Suffix

It is now recommended that you consider using a +.json+ suffix in your URL when communicating via the REST API.  This is technically not a new feature - it was always possible in older versions of the REST API.  We've updated the documentation to suggest this simpler approach (which avoids the necessity of passing +Accept:application/json+ in the header.)

<shell>
curl -u V8WPYgRdSZN1mSQG17sK:x http://example.com/api/orders.json
</shell>